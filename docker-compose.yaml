version: '3.8'

services:
  db:
    image: postgres:15
    container_name: postgres_db
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
      POSTGRES_DB: postgres
    ports:
      - "5433:5432"
    volumes:
      - ./postgres-data:/var/lib/postgresql/data
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready -U postgres" ]
      interval: 5s
      timeout: 5s
      retries: 5

  redis:
    image: redis:7
    container_name: redis_cache
    ports:
      - "6379:6379"
    volumes:
      - ./redis-data:/data
    healthcheck:
      test: [ "CMD", "redis-cli", "ping" ]
      interval: 5s
      timeout: 5s
      retries: 5

  keycloak:
    image: quay.io/keycloak/keycloak:26.1.3
    container_name: keycloak
    volumes:
      - ./keycloak/realm-export.json:/opt/keycloak/data/import/realm-export.json
    environment:
      KC_HTTP_PORT: 8090
      KC_BOOTSTRAP_ADMIN_USERNAME: admin
      KC_BOOTSTRAP_ADMIN_PASSWORD: admin
    command:
      - start-dev
      - --import-realm
      - --health-enabled=true
    ports:
      - "8090:8090"
    healthcheck:
      test: ['CMD-SHELL', '[ -f /tmp/HealthCheck.java ] || echo "public class HealthCheck { public static void main(String[] args) throws java.lang.Throwable { System.exit(java.net.HttpURLConnection.HTTP_OK == ((java.net.HttpURLConnection)new java.net.URL(args[0]).openConnection()).getResponseCode() ? 0 : 1); } }" > /tmp/HealthCheck.java && java /tmp/HealthCheck.java http://localhost:9000/health/live']
      interval: 30s
      timeout: 10s
      retries: 5

  client-service:
    build:
      context: .
      dockerfile: ./client-service/Dockerfile
    container_name: client-service
    ports:
      - "8080:8080"
    depends_on:
      db:
        condition: service_healthy
      redis:
        condition: service_healthy
      keycloak:
        condition: service_healthy
    environment:
      - SPRING_R2DBC_URL=r2dbc:postgresql://db:5432/postgres
      - SPRING_R2DBC_USERNAME=postgres
      - SPRING_R2DBC_PASSWORD=postgres
      - SPRING_LIQUIBASE_URL=jdbc:postgresql://db:5432/postgres
      - SPRING_LIQUIBASE_USER=postgres
      - SPRING_LIQUIBASE_PASSWORD=postgres
      - IMAGES_DIR=/app/uploaded-images
      - SPRING_DATA_REDIS_HOST=redis
      - API_CLIENT_PAYMENT_SERVICE_URL=http://payment-service:8082
      - KEYCLOAK_SERVICE_NAME=keycloak:8090
    volumes:
      - ./client-service/uploaded-images:/app/uploaded-images

  payment-service:
    build:
      context: .
      dockerfile: ./payment-service/Dockerfile
    container_name: payment-service
    ports:
      - "8082:8082"
    environment:
      - KEYCLOAK_SERVICE_NAME=keycloak:8090
    depends_on:
      db:
        condition: service_healthy
      keycloak:
        condition: service_healthy